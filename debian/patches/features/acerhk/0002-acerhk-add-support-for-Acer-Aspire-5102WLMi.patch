From 0006f34cd5e2390eb29ccb02c2a55cf7452753e4 Mon Sep 17 00:00:00 2001
From: Milko Krachounov <exabyte@3mhz.net>
Date: Mon, 1 Jul 2013 02:18:00 +0200
Subject: [PATCH 02/65] acerhk: add support for Acer Aspire 5102WLMi

Copyright (C) 2007 Milko Krachounov Under the GNU GPL2
See: http://gentoo-wiki.com/HARDWARE_Acer_Aspire_5102WLMi#acerhk

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 drivers/platform/x86/acerhk.c | 28 ++++++++++++++++++++--------
 1 file changed, 20 insertions(+), 8 deletions(-)

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -551,6 +551,7 @@ int COLUSSI(char *x, int m, char *y, int
  */
 static asmlinkage void call_bios_6xx(struct register_buffer *buf)
 {
+#ifndef __x86_64__
   if (bios_routine) {
       local_irq_disable();
 	__asm__ __volatile__(
@@ -579,10 +580,12 @@ static asmlinkage void call_bios_6xx(str
 						 );
       local_irq_enable();
   }
+#endif
 }
 
 static asmlinkage void call_bios_52x(struct register_buffer *buf)
 {
+#ifndef __x86_64__
   if (bios_routine) {
       local_irq_disable();
 	__asm__ __volatile__(
@@ -612,6 +615,7 @@ static asmlinkage void call_bios_52x(str
 						 );
       local_irq_enable();
   }
+#endif
 }
 
 #define PRINT_BUFFER(x) \
@@ -784,7 +788,8 @@ static int get_nr_events(void)
   unsigned char c = 0;
 
   spin_lock_irqsave (&rtc_lock, flags);
-#ifndef DUMMYHW
+/* #ifndef DUMMYHW */
+#if !(defined(DUMMYHW) || defined(__x86_64__))
   if (cmos_index)
     c = CMOS_READ(cmos_index);
   else if (verbose > 3)
@@ -868,9 +873,9 @@ static int launch_connect(int val)
 
 static struct proc_dir_entry *proc_acer_dir;
 
-static unsigned int __init find_hk_area(void)
+static unsigned long __init find_hk_area(void)
 {
-  int offset, sig;
+  long offset, sig;
   unsigned int fkt;
   fkt = 0;
   sig = -1; /* offset to signature in io area */
@@ -888,9 +893,9 @@ static unsigned int __init find_hk_area(
     fkt = readl(reg1 + sig + 5);
     /* adjust fkt to address of mapped IO area */
     if (fkt >= 0xf0000)
-      fkt = (unsigned int)reg1 + fkt - 0xf0000;
+      fkt = (unsigned long)reg1 + fkt - 0xf0000;
     else if (fkt >= 0xe0000)
-      fkt = (unsigned int)reg1 + fkt - 0xe0000;
+      fkt = (unsigned long)reg1 + fkt - 0xe0000;
     else
       fkt = 0;
   }
@@ -1145,6 +1150,7 @@ static void __init setup_keymap_model(un
   case 2000:
   case 2010:
   case 2020:
+  case 5100:
     /* Aspire 13xx series laptops use dritek hardware, no
        acerhk-mapping needed
        VolUp and VolDown are managed as normal keys
@@ -1485,6 +1491,7 @@ static void __init setup_model_features(
   case 1800:
   case 2010:
   case 2020:
+  case 5100:
     /* Dritek EC, bluetooth, wifi, mail */
     acerhk_type = TM_dritek;
     acerhk_model_features = TM_F_MAIL_LED_EC2 | TM_F_WLAN_EC2 | TM_F_BLUE_EC2;
@@ -1819,6 +1826,8 @@ static unsigned int __init determine_lap
           break;
         case '2': series = 5020; break;
         }
+      } else if (str[8] == '1' && str[9] == '0') {
+       series = 5100;
       } else {
         if (verbose > 1)
           printk(KERN_INFO"acerhk: model string indicates unknown Aspire 5xxx series\n");
@@ -2159,7 +2168,8 @@ static t_key_names transl8_key_code(int
 /* polling timer handler */
 static void acerhk_poll_event(unsigned long save_size)
 {
-#ifndef DUMMYHW
+/* #ifndef DUMMYHW */
+#if !(defined(DUMMYHW) || defined(__x86_64__))
   unsigned int max = MAX_POLLING_LOOPS;
   /* make sure not to loop more then 32 times */
   if (!max || max > 32)
@@ -2181,7 +2191,8 @@ static void acerhk_blink_event(unsigned
 {
   if (acerhk_blueled_blinking != -1) {
     acerhk_blueled_blinking = !acerhk_blueled_blinking;
-#ifndef DUMMYHW
+/* #ifndef DUMMYHW */
+#if !(defined(DUMMYHW) || defined(__x86_64__))
     wbutton_fct_1(acerhk_blueled_blinking);
 #endif
     acerhk_timer_blinking.expires = jiffies + acerhk_blueled_blinking_delay;
@@ -2961,7 +2972,8 @@ static int __devinit acerhk_probe(struct
     /* attach to input system */
     init_input();
     memset(acerhk_model_string, 0x00, ACERHK_MODEL_STRLEN);
-#ifdef DUMMYHW
+/* #ifdef DUMMYHW */
+#if (defined(DUMMYHW) || defined(__x86_64__))
     acerhk_model_addr = (void*)0x12345678;
     /* copy the string, but not more than 15 characters */
     strncpy(acerhk_model_string, "TravelmateDummy", ACERHK_MODEL_STRLEN-1);
