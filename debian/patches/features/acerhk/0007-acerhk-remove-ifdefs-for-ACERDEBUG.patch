From ce2e4687c9d2d1e5e72ef562e59bdfc8251abea9 Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Mon, 1 Jul 2013 02:22:04 +0200
Subject: [PATCH 07/65] acerhk: remove ifdefs for ACERDEBUG

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 drivers/platform/x86/acerhk.c | 307 ------------------------------------------
 1 file changed, 307 deletions(-)

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -63,7 +63,6 @@
 
 #include "acerhk.h"
 
-/* #define ACERDEBUG */
 /* #define DUMMYHW */
 
 #define ACERHK_VERSION "0.5.35"
@@ -215,62 +214,6 @@ static void send_kbd_cmd(unsigned char c
 	}
 }
 
-#ifdef ACERDEBUG
-static inline int my_i8042_read_ecstatus(void)
-{
-	return inb(EC_STATUS_REG);
-}
-
-static int my_i8042_wait_ecwrite(void)
-{
-	int i = 0;
-	while ((my_i8042_read_ecstatus() & 0x02) && (i < 10000)) {
-		udelay(50);
-		i++;
-	}
-	return -(i == 10000);
-}
-
-static void send_ec_cmd(unsigned char cmd, unsigned char val)
-{
-	if (usedritek) {
-		preempt_disable();
-		if (!my_i8042_wait_ecwrite())
-			outb(cmd, EC_CNTL_REG);
-		if (!my_i8042_wait_ecwrite())
-			outb(val, EC_DATA_REG);
-		preempt_enable_no_resched();
-	} else {
-		printk(KERN_INFO "acerhk: request for accessing EC ignored\n"
-		       KERN_INFO
-		       "acerhk: Use of dritek keyboard extension not enabled, use module\n"
-		       KERN_INFO
-		       "acerhk: parameter usedritek=1 to do that (possibly dangerous)\n");
-	}
-}
-#endif
-#ifdef ACERDEBUG
-static void enable_mute_led_ec(void)
-{
-	if (verbose)
-		printk(KERN_INFO "acerhk: enabling mute led via EC\n");
-	send_kbd_cmd(0x59, 0x94);
-}
-
-static void disable_mute_led_ec(void)
-{
-	if (verbose)
-		printk(KERN_INFO "acerhk: disabling mute led via EC\n");
-	send_kbd_cmd(0x59, 0x95);
-}
-
-static void enable_dmm_function(void)
-{
-	if (verbose)
-		printk(KERN_INFO "acerhk: enabling WLAN via EC variant 2\n");
-	send_kbd_cmd(0x45, 0xd3);
-}
-#endif
 static void enable_wlan_ec_1(void)
 {
 	if (verbose)
@@ -339,41 +282,6 @@ static void disable_bluetooth_ec_2(void)
 	acerhk_bluetooth_state = 0;
 }
 
-#ifdef ACERDEBUG
-static void enable_wireless_ec(void)
-{
-	if (verbose)
-		printk(KERN_INFO "acerhk: enabling wireless hardware\n");
-	if (usedritek) {
-		preempt_disable();
-		if (!my_i8042_wait_ecwrite())
-			outb(0x4d, EC_CNTL_REG);
-		if (!my_i8042_wait_ecwrite())
-			outb(0xd2, EC_DATA_REG);
-		if (!my_i8042_wait_ecwrite())
-			outb(0x01, EC_DATA_REG);
-		preempt_enable_no_resched();
-	}
-	acerhk_wlan_state = 1;
-}
-
-static void disable_wireless_ec(void)
-{
-	if (verbose)
-		printk(KERN_INFO "acerhk: disabling wireless hardware\n");
-	if (usedritek) {
-		preempt_disable();
-		if (!my_i8042_wait_ecwrite())
-			outb(0x4d, EC_CNTL_REG);
-		if (!my_i8042_wait_ecwrite())
-			outb(0xd2, EC_DATA_REG);
-		if (!my_i8042_wait_ecwrite())
-			outb(0x00, EC_DATA_REG);
-		preempt_enable_no_resched();
-	}
-	acerhk_wlan_state = 0;
-}
-#endif
 static void enable_dritek_keyboard(void)
 {
 	if (verbose)
@@ -670,34 +578,6 @@ static int get_thermal_event(void)
 	return regs.eax & 0xffff;
 }
 
-#ifdef ACERDEBUG
-/* pbutton_fct
- *
- * does what?
- *
- * return value: ?
- */
-static int pbutton_fct(void)
-{
-	struct register_buffer regs;
-	if (acerhk_model_features & TM_F_PBUTTON) {
-		regs.eax = 0x9612;
-		regs.ebx = 0x10b;
-		regs.ecx = 0x2;
-		preempt_disable();
-		call_bios(&regs);
-		preempt_enable_no_resched();
-		if (verbose > 3)
-			printk(KERN_INFO "acerhk: pbutton = 0x%x\n", regs.eax);
-	} else {
-		if (verbose > 3)
-			printk(KERN_INFO
-			       "acerhk: pbutton function not supported\n");
-		regs.eax = 0x00;
-	}
-	return regs.eax & 0xffff;
-}
-#endif
 
 /* wbutton_fct_1
  *
@@ -2752,143 +2632,6 @@ static int acerhk_proc_blueled(struct fi
 	return len;
 }
 
-#ifdef ACERDEBUG
-static void do_debug(const char *buffer, unsigned long len)
-{
-	unsigned int h, i;
-	switch (buffer[0]) {
-	case 'b':
-		/* test WLAN on TM 4001 */
-		switch (buffer[1]) {
-		case '0':
-			disable_wlan_ec_1();
-			break;
-		case '1':
-		default:
-			enable_wlan_ec_1();
-		}
-		break;
-	case 'B':
-		/* test BLUETOOTH on TM 4001 */
-		switch (buffer[1]) {
-		case '0':
-			disable_bluetooth_ec_1();
-			break;
-		case '1':
-		default:
-			enable_bluetooth_ec_1();
-		}
-		break;
-	case 'D':
-		/* test "DMM Function Enabled" entry of TM 4150/4650 */
-		enable_dmm_function();
-		break;
-	case 'i':
-	case '1':
-		break;
-	case 'e':
-		switch (buffer[1]) {
-		case '1':
-			start_polling();
-			break;
-		default:
-			stop_polling();
-		}
-		break;
-	case 'k':
-		for (i = 0; i <= 255; i++) {
-			input_report_key(acerhk_input_dev_ptr, i, 1);
-			input_report_key(acerhk_input_dev_ptr, i, 0);
-		}
-		break;
-	case 'm':
-		/* set mapping key names -> input events */
-		sscanf(&buffer[2], "%x", &i);
-		h = buffer[1] - '0' + 1;
-		printk("acerhk: key name %x maps to %x\n", h, i);
-		acerhk_name2event[h] = i;
-		break;
-	case 'M':
-		/* test mute LED on dritek hardware */
-		switch (buffer[1]) {
-		case '0':
-			disable_mute_led_ec();
-			break;
-		case '1':
-		default:
-			enable_mute_led_ec();
-		}
-		break;
-	case 'p':
-		printk("acerhk: pbutton = 0x%x\n", pbutton_fct());
-		break;
-	case 's':
-		/* send key event to test the key translation in input system */
-		sscanf(&buffer[1], "%x", &h);
-		printk("acerhk: sending key event 0x%x\n", h);
-		input_report_key(acerhk_input_dev_ptr, h, 1);
-		input_report_key(acerhk_input_dev_ptr, h, 0);
-		break;
-	case 'S':
-		/* simulate key codes to test the key translation in acerhk */
-		sscanf(&buffer[1], "%x", &h);
-		send_key_event(transl8_key_code(h));
-		break;
-	case 't':
-		printk("acerhk: thermal event = 0x%x\n", get_thermal_event());
-		break;
-	case 'w':
-		/* test the wbutton functions, someone really needs to have another look
-		   at the windows driver */
-		switch (buffer[1]) {
-		case '2':
-			printk("acerhk: wbutton_2(%d) = 0x%x\n",
-			       buffer[2] - '0', wbutton_fct_2(buffer[2] - '0'));
-			break;
-		case '1':
-		default:
-			printk("acerhk: wbutton_1(%d) = 0x%x\n",
-			       buffer[2] - '0', wbutton_fct_1(buffer[2] - '0'));
-		}
-		break;
-	case 'W':
-		/* test wireless HW/LED on some models using dritek hardware */
-		switch (buffer[1]) {
-		case '0':
-			disable_wireless_ec();
-			break;
-		case '1':
-		default:
-			enable_wireless_ec();
-		}
-		break;
-	case 'v':
-		verbose = buffer[1] - '0';
-		printk("acerhk: verbosity level changed to %d\n", verbose);
-		break;
-	case 'd':
-	case '0':
-	default:
-		break;
-	}
-}
-
-static int acerhk_proc_debug(struct file *file, const char *buffer,
-			     unsigned long count, void *data)
-{
-	char str[5];
-	int len;
-	if (count > 5)
-		len = 5;
-	else
-		len = count;
-	if (copy_from_user(str, buffer, len))
-		return -EFAULT;
-	str[4] = '\0';
-	do_debug(str, len);
-	return len;
-}
-#endif
 
 static int acerhk_proc_init(void)
 {
@@ -2982,41 +2725,6 @@ static int acerhk_proc_init(void)
 							entry->write_proc =
 							    acerhk_proc_blueled;
 							retval = 1;
-#ifdef ACERDEBUG
-							/* add extra file for debugging purposes */
-							entry =
-							    create_proc_entry
-							    ("debug", 0222,
-							     proc_acer_dir);
-							if (entry == NULL) {
-								printk(KERN_INFO
-								       "acerhk: cannot create debug file\n");
-								remove_proc_entry
-								    ("info",
-								     proc_acer_dir);
-								remove_proc_entry
-								    ("key",
-								     proc_acer_dir);
-								remove_proc_entry
-								    ("led",
-								     proc_acer_dir);
-								remove_proc_entry
-								    ("wirelessled",
-								     proc_acer_dir);
-								remove_proc_entry
-								    ("blueled",
-								     proc_acer_dir);
-								remove_proc_entry
-								    ("driver/acerhk",
-								     NULL);
-								retval = 0;
-							} else {
-								entry->
-								    write_proc =
-								    acerhk_proc_debug;
-								retval = 1;
-							}
-#endif
 						}
 					}
 				}
@@ -3036,9 +2744,6 @@ static void acerhk_proc_cleanup(void)
 		remove_proc_entry("led", proc_acer_dir);
 		remove_proc_entry("wirelessled", proc_acer_dir);
 		remove_proc_entry("blueled", proc_acer_dir);
-#ifdef ACERDEBUG
-		remove_proc_entry("debug", proc_acer_dir);
-#endif
 		remove_proc_entry("driver/acerhk", NULL);
 		proc_acer_dir = NULL;
 	}
@@ -3131,15 +2836,6 @@ static int acerhk_ioctl(struct inode *in
 	return retval;
 }
 
-#ifdef ACERDEBUG
-static ssize_t acerhk_write(struct file *file, const char *buffer,
-			    size_t length, loff_t * offset)
-{
-	if (length)
-		do_debug(buffer, length);
-	return length;
-}
-#endif
 
 static int acerhk_open(struct inode *inode, struct file *file)
 {
@@ -3170,9 +2866,6 @@ static struct file_operations acerhk_fop
 owner:	THIS_MODULE,
 ioctl:	acerhk_ioctl,
 open:	acerhk_open,
-#ifdef ACERDEBUG
-write:	acerhk_write,
-#endif
 release:acerhk_release,
 };
 
