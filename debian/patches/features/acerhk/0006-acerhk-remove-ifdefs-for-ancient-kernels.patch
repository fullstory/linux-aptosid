From 40e177410b36574e67d74027f77c62a36a60cf8e Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Mon, 1 Jul 2013 02:21:32 +0200
Subject: [PATCH 06/65] acerhk: remove ifdefs for ancient kernels

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 drivers/platform/x86/acerhk.c | 72 -------------------------------------------
 1 file changed, 72 deletions(-)

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -46,17 +46,7 @@
 #ifdef CONFIG_X86
 
 #include <linux/version.h>
-
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
-#define KERNEL26
 #include <linux/moduleparam.h>
-#else
-#include <linux/modversions.h>
-#endif
-
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,15)
-#define STATIC_INPUT_DEV
-#endif
 
 #include <linux/module.h>
 #include <linux/kernel.h>
@@ -99,7 +89,6 @@ static int wlan_state = -1;
 static int bluetooth_state = -1;
 static int verbose;
 static unsigned int force_series;
-#ifdef KERNEL26
 module_param(poll, int, 0444);
 module_param(autowlan, int, 0444);
 module_param(usedritek, int, 0444);
@@ -107,15 +96,6 @@ module_param(verbose, int, 0444);
 module_param(wlan_state, int, 0444);
 module_param(bluetooth_state, int, 0444);
 module_param(force_series, uint, 0444);
-#else
-MODULE_PARM(poll, "i");
-MODULE_PARM(autowlan, "i");
-MODULE_PARM(wlan_state, "i");
-MODULE_PARM(bluetooth_state, "i");
-MODULE_PARM(usedritek, "i");
-MODULE_PARM(verbose, "i");
-MODULE_PARM(force_series, "i");
-#endif
 MODULE_PARM_DESC(poll, "start polling timer");
 MODULE_PARM_DESC(autowlan, "automatic switching of wlan hardware");
 MODULE_PARM_DESC(wlan_state, "(assumed) initial state of WLAN LED/hardware");
@@ -194,7 +174,6 @@ static void stop_blinking(void);
 #define EC_CNTL_REG		    0x66	/* Controller command register of EC (W) */
 #define EC_DATA_REG		    0x62	/* EC data register (R/W) */
 
-#ifdef KERNEL26
 
 #include <linux/preempt.h>
 
@@ -202,19 +181,6 @@ static void stop_blinking(void);
 #define KBD_CNTL_REG		0x64	/* Controller command register (W) */
 #define KBD_DATA_REG		0x60	/* Keyboard data register (R/W) */
 
-#else
-
-#ifndef KEY_MEDIA
-#define KEY_MEDIA		226
-#endif
-
-#define preempt_disable()		do { } while (0)
-#define preempt_enable_no_resched()	do { } while (0)
-#define preempt_enable()		do { } while (0)
-#define preempt_check_resched()		do { } while (0)
-#include <linux/pc_keyb.h>
-
-#endif
 
 static inline int my_i8042_read_status(void)
 {
@@ -2467,12 +2433,6 @@ static void init_input(void)
 {
 	int i;
 
-#ifndef KERNEL26
-	/* request keyboard input module */
-	request_module("keybdev");
-	if (verbose > 3)
-		printk(KERN_INFO "requested keyboard input driver\n");
-#endif
 
 #ifndef STATIC_INPUT_DEV
 	/* allocate acerhk input device */
@@ -2825,9 +2785,6 @@ static void do_debug(const char *buffer,
 		break;
 	case 'i':
 	case '1':
-#ifndef KERNEL26
-		MOD_INC_USE_COUNT;
-#endif
 		break;
 	case 'e':
 		switch (buffer[1]) {
@@ -2912,9 +2869,6 @@ static void do_debug(const char *buffer,
 	case 'd':
 	case '0':
 	default:
-#ifndef KERNEL26
-		MOD_DEC_USE_COUNT;
-#endif
 		break;
 	}
 }
@@ -2947,9 +2901,6 @@ static int acerhk_proc_init(void)
 		printk(KERN_INFO
 		       "acerhk: could not create /proc/driver/acerhk\n");
 	} else {
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-		proc_acer_dir->owner = THIS_MODULE;
-#endif
 		/* now create several files, first general info ... */
 		entry = create_proc_read_entry("info",
 					       0444, proc_acer_dir,
@@ -2959,9 +2910,6 @@ static int acerhk_proc_init(void)
 			remove_proc_entry("driver/acerhk", NULL);
 			retval = 0;
 		} else {
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-			entry->owner = THIS_MODULE;
-#endif
 			/* ... last pressed key ... */
 			entry = create_proc_read_entry("key",
 						       0444, proc_acer_dir,
@@ -2973,9 +2921,6 @@ static int acerhk_proc_init(void)
 				remove_proc_entry("driver/acerhk", NULL);
 				retval = 0;
 			} else {
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-				entry->owner = THIS_MODULE;
-#endif
 				/* ... and led control file */
 				entry =
 				    create_proc_entry("led", 0222,
@@ -2991,9 +2936,6 @@ static int acerhk_proc_init(void)
 					retval = 0;
 				} else {
 					entry->write_proc = acerhk_proc_led;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-					entry->owner = THIS_MODULE;
-#endif
 					/* ... and wireless led controll file */
 					entry =
 					    create_proc_entry("wirelessled",
@@ -3014,9 +2956,6 @@ static int acerhk_proc_init(void)
 					} else {
 						entry->write_proc =
 						    acerhk_proc_wirelessled;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-						entry->owner = THIS_MODULE;
-#endif
 						/* ... and bluetooth led controll file */
 						entry =
 						    create_proc_entry("blueled",
@@ -3042,10 +2981,6 @@ static int acerhk_proc_init(void)
 						} else {
 							entry->write_proc =
 							    acerhk_proc_blueled;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-							entry->owner =
-							    THIS_MODULE;
-#endif
 							retval = 1;
 #ifdef ACERDEBUG
 							/* add extra file for debugging purposes */
@@ -3079,10 +3014,6 @@ static int acerhk_proc_init(void)
 								entry->
 								    write_proc =
 								    acerhk_proc_debug;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
-								entry->owner =
-								    THIS_MODULE;
-#endif
 								retval = 1;
 							}
 #endif
@@ -3454,9 +3385,6 @@ MODULE_AUTHOR("Olaf Tauber");
 MODULE_DESCRIPTION("AcerHotkeys extra buttons keyboard driver");
 MODULE_LICENSE("GPL");
 
-#ifndef KERNEL26
-EXPORT_NO_SYMBOLS;
-#endif
 
 #else
 #error This driver is only available for X86 architecture
