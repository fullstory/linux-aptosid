acerhk: drop support dritek keyboard extensions

This has been broken (FTBS) since kernel v4.14 (and is not required for the
primary functionality required to support WLAN/ bluetooth rfkill keys, at
least not for the TM292LMi).

drivers/platform/x86/acerhk.c: In function 'call_bios_6xx':
drivers/platform/x86/acerhk.c:325:1: error: bp cannot be used in 'asm' here

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -133,9 +133,6 @@ static unsigned int bios_routine;
 static unsigned int cmos_index;
 #endif
 
-/* function for bios call */
-static bios_call call_bios;
-
 /* supported features for this model */
 static unsigned int acerhk_model_features;
 
@@ -283,46 +280,6 @@ static void disable_mail_led_ec_3(void)
 		outw(0xC060, 0xCFC);
 	preempt_enable();
 }
-/* Experimental use of dritek keyboard extension }}} */
-
-/* {{{ hardware access functions */
-/* call_bios_<model family>
- *
- * call request handler in mapped system rom
- *
- * the request is handed over via all 6 general purpose registers, results are
- * taken from them and copied back to buf
- */
-static asmlinkage void call_bios_6xx(struct register_buffer *buf)
-{
-#ifndef __x86_64__
-	if (bios_routine) {
-		local_irq_disable();
-		__asm__ __volatile__("movl %1,%%edx\n\t"
-				     "pusha\n\t"
-				     "movl %%edx,%%ebp\n\t"
-				     "movl (%%ebp),%%eax\n\t"
-				     "movl 4(%%ebp),%%ebx\n\t"
-				     "movl 8(%%ebp),%%ecx\n\t"
-				     "movl 12(%%ebp),%%edx\n\t"
-				     "movl 16(%%ebp),%%edi\n\t"
-				     "movl 20(%%ebp),%%esi\n\t"
-				     "pushl %%ebp\n\t"
-				     "call *%0\n\t"
-				     "popl %%ebp\n\t"
-				     "movl %%eax, (%%ebp)\n\t"
-				     "movl %%ebx, 4(%%ebp)\n\t"
-				     "movl %%ecx, 8(%%ebp)\n\t"
-				     "movl %%edx, 12(%%ebp)\n\t"
-				     "movl %%edi, 16(%%ebp)\n\t"
-				     "movl %%esi, 20(%%ebp)\n\t"
-				     "popa\n\t" : : "m"(bios_routine), "m"(buf)
-				     : "%eax", "%ebx", "%ecx", "%edx", "%edi",
-				     "%esi", "%ebp");
-		local_irq_enable();
-	}
-#endif
-}
 
 /* get_fnkey_event
  *
@@ -340,10 +297,6 @@ static int get_fnkey_event(void)
 	regs.ecx = 0;
 	regs.edx = 0;
 
-	preempt_disable();
-	call_bios(&regs);
-	preempt_enable();
-
 	return regs.eax & 0xffff;
 }
 
@@ -360,10 +313,6 @@ static int get_thermal_event(void)
 		regs.eax = 0x9612;
 		regs.ebx = 0x12e;
 
-		preempt_disable();
-		call_bios(&regs);
-		preempt_enable();
-
 		if (verbose >= 4)
 			pr_info("thermal event = 0x%x\n", regs.eax);
 	} else {
@@ -393,10 +342,6 @@ static void wbutton_fct_1(int val)
 		regs.eax = 0x9610;
 		regs.ebx = ((val & 0xff) << 8) | 0x34;
 
-		preempt_disable();
-		call_bios(&regs);
-		preempt_enable();
-
 		if (verbose >= 4)
 			pr_info("wbutton1 = 0x%x\n", regs.eax);
 	} else {
@@ -421,10 +366,6 @@ static void wbutton_fct_2(int val)
 		regs.eax = 0x9610;
 		regs.ebx = ((val & 0xff) << 8) | 0x35;
 
-		preempt_disable();
-		call_bios(&regs);
-		preempt_enable();
-
 		if (verbose >= 4)
 			pr_info("wbutton2 = 0x%x\n", regs.eax);
 	} else {
@@ -472,10 +413,6 @@ static void set_mail_led(int val)
 		regs.eax = 0x9610;
 		regs.ebx = ((val & 0xff) << 8) | 0x31;
 
-		preempt_disable();
-		call_bios(&regs);
-		preempt_enable();
-
 		if (verbose >= 4)
 			pr_info("mail led set to = 0x%x\n", val);
 	} else if (acerhk_model_features & TM_F_MAIL_LED_EC) {
@@ -512,10 +449,6 @@ static void launch_connect(int val)
 		regs.eax = 0x9610;
 		regs.ebx = ((val & 0xff) << 8) | 0x2e;
 
-		preempt_disable();
-		call_bios(&regs);
-		preempt_enable();
-
 		if (verbose >= 4)
 			pr_info("connect(%d) = 0x%x\n", val, regs.eax);
 	} else {
@@ -561,12 +494,6 @@ static unsigned long __init find_hk_area
 
 static void __init setup_model_features(void)
 {
-	/* set the correct bios call function according to type */
-	call_bios = call_bios_6xx;
-
-	if (verbose >= 3)
-		pr_info("using call_bios_6xx mode\n");
-
 	/* setup available keys, clear mapping keycode -> keyname, */
 	memset(&acerhk_key2name[0], k_none, sizeof(acerhk_key2name));
 
