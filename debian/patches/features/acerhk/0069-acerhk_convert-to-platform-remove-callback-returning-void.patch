acerhk: Convert to platform remove callback returning void
    
The .remove() callback for a platform driver returns an int which makes
many driver authors wrongly assume it's possible to do error handling by
returning an error code. However the value returned is ignored (apart
from emitting a warning) and this typically results in resource leaks.

To improve here there is a quest to make the remove callback return
void. In the first step of this quest all drivers are converted to
.remove_new(), which already returns void. Eventually after all drivers
are converted, .remove_new() will be renamed to .remove().

Trivially convert this driver from always returning zero in the remove
callback to the void returning variant.

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -1524,7 +1524,7 @@ static int acerhk_probe(struct platform_
 	return ret;
 }
 
-static int acerhk_remove(struct platform_device *dev)
+static void acerhk_remove(struct platform_device *dev)
 {
 	/* disable wireless LED */
 	if (acerhk_model_features & TM_F_WLAN_EC1)
@@ -1554,8 +1554,6 @@ static int acerhk_remove(struct platform
 	release_input();
 	misc_deregister(&acerhk_misc_dev);
 	disable_dritek_keyboard();
-
-	return 0;
 }
 
 static struct platform_driver acerhk_driver = {
