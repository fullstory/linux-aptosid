From 9b46a0d6ddebd5061e47a5a4cf4dd038134c9de0 Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Tue, 13 Aug 2013 22:17:27 +0200
Subject: [PATCH 41/65] acerhk: streamline verbosity parsing

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 drivers/platform/x86/acerhk.c | 46 +++++++++++++++++++++----------------------
 1 file changed, 23 insertions(+), 23 deletions(-)

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -489,12 +489,12 @@ static int get_thermal_event(void)
 		call_bios(&regs);
 		preempt_enable_no_resched();
 
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("thermal event = 0x%x\n", regs.eax);
 	} else {
 		regs.eax = 0x00;
 
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("thermal event not supported\n");
 	}
 
@@ -524,10 +524,10 @@ static int wbutton_fct_1(int val)
 		call_bios(&regs);
 		preempt_enable_no_resched();
 
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("wbutton1 = 0x%x\n", regs.eax);
 	} else {
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("wbutton function 1 not supported\n");
 
 		regs.eax = 0x00;
@@ -558,10 +558,10 @@ static int wbutton_fct_2(int val)
 		call_bios(&regs);
 		preempt_enable_no_resched();
 
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("wbutton2 = 0x%x\n", regs.eax);
 	} else {
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("wbutton function 2 not supported\n");
 
 		regs.eax = 0x00;
@@ -586,7 +586,7 @@ static int get_nr_events(void)
 #ifndef __x86_64__
 	if (cmos_index)
 		c = CMOS_READ(cmos_index);
-	else if (verbose > 3)
+	else if (verbose >= 4)
 		pr_info("get_nr_events - no valid cmos index set\n");
 #endif
 	spin_unlock_irqrestore(&rtc_lock, flags);
@@ -616,7 +616,7 @@ static int set_mail_led(int val)
 		call_bios(&regs);
 		preempt_enable_no_resched();
 
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("mail led set to = 0x%x\n", val);
 	} else if (acerhk_model_features & TM_F_MAIL_LED_EC) {
 		if (val == 1)
@@ -634,7 +634,7 @@ static int set_mail_led(int val)
 		else if (val == 0)
 			disable_mail_led_ec_3();
 	} else {
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("mail led not supported\n");
 
 		regs.eax = 0x00;
@@ -660,10 +660,10 @@ static int launch_connect(int val)
 		call_bios(&regs);
 		preempt_enable_no_resched();
 
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("connect(%d) = 0x%x\n", val, regs.eax);
 	} else {
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("connect not supported\n");
 
 		regs.eax = 0x00;
@@ -965,13 +965,13 @@ static void __init setup_model_features(
 	/* set the correct bios call function according to type */
 	call_bios = call_bios_6xx;
 
-	if (verbose > 2)
+	if (verbose >= 3)
 		pr_info("using call_bios_6xx mode\n");
 
 	/* setup available keys */
 	setup_keymap_model(acerhk_series);
 
-	if (verbose > 1)
+	if (verbose >= 2)
 		print_features();
 }
 
@@ -1050,7 +1050,7 @@ static void init_keymap_input(void)
 	set_keymap_name(k_next, KEY_NEXTSONG);
 	set_keymap_name(k_display, KEY_MEDIA);	/* also not happy with this */
 
-	if (verbose > 1)
+	if (verbose >= 2)
 		print_mapping();
 }
 
@@ -1069,7 +1069,7 @@ static int filter_idle_value(int keycode
 	    keycode != 0x0865)
 		validkey = keycode;
 
-	if (verbose > 4 && !validkey)
+	if (verbose >= 5 && !validkey)
 		pr_info("throw away idle value 0x%x\n", keycode);
 
 	return validkey;
@@ -1085,7 +1085,7 @@ static void send_key_event(t_key_names k
 		/* convert key name to kernel keycode */
 		input_key = acerhk_name2event[key];
 
-		if (verbose > 2)
+		if (verbose >= 3)
 			pr_info("translated acer key name 0x%x to input key 0x%x\n",
 				key, input_key);
 
@@ -1105,14 +1105,14 @@ static t_key_names transl8_key_code(int
 	/* first filter out idle values */
 	keycode = filter_idle_value(keycode);
 	if (keycode) {
-		if (verbose > 3)
+		if (verbose >= 4)
 			pr_info("received key code 0x%x\n", keycode);
 
 		/* translate keycode to key name */
 		if (keycode >= 0 && keycode <= 255)
 			keyname = acerhk_key2name[keycode];
 		else {
-			if (verbose > 3)
+			if (verbose >= 4)
 				pr_info("keycode 0x%x too big, will use only 8 bits\n",
 				        keycode);
 
@@ -1121,10 +1121,10 @@ static t_key_names transl8_key_code(int
 		}
 
 		/* produce some log information for higher verbosity levels */
-		if (keyname != k_none && verbose > 2)
+		if (keyname != k_none && verbose >= 3)
 			pr_info("translated acer key code 0x%x to key name 0x%x\n",
 				keycode, keyname);
-		else if (keyname == k_none && verbose > 3)
+		else if (keyname == k_none && verbose >= 4)
 			pr_info("translated acer key code 0x%x to no key\n",
 				keycode);
 	}
@@ -1390,12 +1390,12 @@ static int acerhk_probe(struct platform_
 		ret = -EAGAIN;
 	} else {
 		reg1 = ioremap(0xf0000, 0xffff);
-		if (verbose > 1)
+		if (verbose >= 2)
 			pr_info("area from 0xf000 to 0xffff mapped to %p\n",
 				reg1);
 
 		reg2 = ioremap(0xe0000, 0xffff);
-		if (verbose > 1)
+		if (verbose >= 2)
 			pr_info("area from 0xe000 to 0xffff mapped to %p\n",
 				reg2);
 
@@ -1490,7 +1490,7 @@ static int acerhk_remove(struct platform
 	misc_deregister(&acerhk_misc_dev);
 	disable_dritek_keyboard();
 
-	if (verbose > 2)
+	if (verbose >= 3)
 		pr_info("unloaded\n");
 
 	return 0;
