From 67b3c4ad95959eadaee3131767f5ebce985fd864 Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Wed, 14 Aug 2013 22:02:21 +0200
Subject: [PATCH 59/65] acerhk: check for failures of input_register_device()

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 drivers/platform/x86/acerhk.c | 20 +++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

--- a/drivers/platform/x86/acerhk.c
+++ b/drivers/platform/x86/acerhk.c
@@ -981,9 +981,10 @@ static void acerhk_poll_event(unsigned l
 	add_timer(&acerhk_timer_poll);
 }
 
-static void init_input(void)
+static int init_input(void)
 {
 	int i;
+	int ret;
 
 	/* allocate acerhk input device */
 	acerhk_input_dev_ptr = input_allocate_device();
@@ -1004,13 +1005,16 @@ static void init_input(void)
 
 	/* set mapping keyname -> input event */
 	init_keymap_input();
+	ret = input_register_device(acerhk_input_dev_ptr);
+	if (ret) {
+		pr_err("failed to register input device: %d\n", ret);
+		input_free_device(acerhk_input_dev_ptr);
+	}
 
-	if (verbose)
-		pr_info("registered input device\n");
-
-	input_register_device(acerhk_input_dev_ptr);
 	init_timer(&acerhk_timer_poll);
 	acerhk_polling_state = 0;
+
+	return ret;
 }
 
 static void stop_polling(void)
@@ -1197,6 +1201,8 @@ static void __init dmi_check_cb_common(c
 
 	if (untested)
 		pr_warn("Untested device, please report success or failure to the module maintainer.\n");
+
+	print_features();
 }
 
 static int __init dmi_check_cb_aspire_1300(const struct dmi_system_id *id)
@@ -1740,7 +1746,7 @@ static int acerhk_probe(struct platform_
 				reg2);
 
 		/* attach to input system */
-		init_input();
+		ret = init_input();
 #ifndef __x86_64__
 		bios_routine = find_hk_area();
 
@@ -1749,7 +1755,6 @@ static int acerhk_probe(struct platform_
 
 		/* Without a bios routine we cannot do anything except on dritek
 		   type HW, unload on other types */
-		ret = 0;
 		if (verbose && bios_routine)
 			pr_info("bios routine found at 0x%x\n", bios_routine);
 
@@ -1778,6 +1783,7 @@ static int acerhk_probe(struct platform_
 
 		/* enable mail LED */
 		set_mail_led(1);
+		print_features();
 	}
 
 	return ret;
